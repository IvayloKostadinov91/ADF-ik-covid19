{
	"name": "df_dayly_hospital_admission_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_files_ECDC",
						"type": "DatasetReference"
					},
					"name": "SourceDailyFile"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "SourceForCountryLookUp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Hospital_Admissions_Daily",
						"type": "DatasetReference"
					},
					"name": "SinkDaylyFile"
				}
			],
			"transformations": [
				{
					"name": "LookupCountry"
				},
				{
					"name": "PivotOcupancy"
				},
				{
					"name": "CleaningTheColumns"
				},
				{
					"name": "SelectingTheColumns"
				},
				{
					"name": "SortingByDate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceDailyFile",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceForCountryLookUp",
				"SourceDailyFile, SourceForCountryLookUp lookup(SourceDailyFile@country == SourceForCountryLookUp@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCountry",
				"CleaningTheColumns pivot(groupBy(country_code_2_digit,",
				"          reported_date,",
				"          country_code_3_digit,",
				"          country,",
				"          source,",
				"          population),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     hospital_occupancy_count = sum(value),",
				"          icu_occupancy_count = sum(value),",
				"     columnNaming: '$N$V',",
				"     lateral: false) ~> PivotOcupancy",
				"LookupCountry select(mapColumn(",
				"          country = SourceForCountryLookUp@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date = date,",
				"          indicator,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CleaningTheColumns",
				"PivotOcupancy select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          source,",
				"          hospital_occupancy_count = {hospital_occupancy_countDaily hospital occupancy},",
				"          ICU_occupancy_count = {icu_occupancy_countDaily ICU occupancy}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectingTheColumns",
				"SelectingTheColumns sort(asc(reported_date, false)) ~> SortingByDate",
				"SortingByDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['daily'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkDaylyFile"
			]
		}
	}
}